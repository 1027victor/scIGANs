#!/bin/bash
## parsing the arguments
## last update: 2019/04/28
version="scIGANs_0.1.1"

epochs=200 # number of epochs for training
sim_size=200 # number of simulated datasets for imputation
knn_k=10 # number of the neighbours used for imputation
label="" # file path for cell labels
batch_size=8 #
PARAMS=""
impute=""
latent_dim=100
threthold=0.01 ## the convergence threthold; traing will stop if the dM < threthold
#e_matrix=$1 ## the first argument is the input expression matrix

outdir=`pwd`
Bashdir=$(dirname $BASH_SOURCE)
while (( "$#" )); do
  case "$1" in
    -l|--label_file)
      label=$2
      shift 2
      ;;
    -n|--n_epochs)
      epochs=$2
      shift 2
      ;;
    -s|--sim_size)
      sim_size=$2
      shift 2
      ;;
    -k|--knn_k)
      knn_k=$2
      shift 2
      ;;
    -b|--batch_size)
      batch_size=$2
      shift 2
      ;;
    -d|--latent_dim)
      latent_dim=$2
      shift 2
      ;;
    -t|--threthold)
      threthold=$2
      shift 2
      ;;
    -o|--outdir)
      outdir=$2
      shift 2
      ;;
    --impute)
      impute="impute"
      shift
      ;;
    -h|--help)
    echo ""
	echo $version
    echo "Usage: scIGANs in.matrix.txt [options]"
    echo "in.matrix.txt A tab-delimited text file, containing the expression counts with genes in rows and cells in columns. The first row is header and first column is gene IDs or names. <required>"
	echo "-h | --help		show this message"
	echo "-l | --label_file <string>	optional	give the label of cell type or subpopulation for each cell, with the same order of the colounms in expression matrix."
	echo "-n | --n_epochs <integer>	optional	set the number of epochs of training. Default = 200"
	echo "-s | --sim_size <integer>	optional	set the number of generated data for imputation. Default = 200"
	echo "-k | --knn_k <integer>	optional	set the number of nearest neighbours used for imputation. Default = 10"
	echo "-d | --latent_dim <integer>	optional	dimension of the latent space of generator. Default = 100"
	echo "-b | --batch_size <integer>	optional	how many samples per batch to load. More samples per batch requires more memory. Default = 8; max=number_of_cells"
	echo "-t | --threthold <integer>	optional	convergence threthold. Default = 0.01"
	echo "--impute	optional	Set this option to skip training and directly impute using pretrained model for the same input settings."
	echo "-o | --outdir <string>	optional	set the path where to write the imputed matrix. Default: current working directory (pwd)."
    shift
	exit
      ;;
    --) # end argument parsing
      shift
      break
      ;;
    -*|--*=) # unsupported flags
      echo "Error: Unsupported argument $1" >&2
      exit 1
      ;;
    *) # preserve positional arguments
      PARAMS="$PARAMS $1"
      shift
      ;;
  esac
done
# set positional arguments in their proper place
eval set -- "$PARAMS"
e_matrix=$(awk -v OFS=" "  '{print $1}' <<< $PARAMS)
set -e
# create a tmp folder for intermediate outputs
#rm -r scIGANs_tmp*
timestamp=$(date '+%Y%m%d%H%M')
tmp='scIGANs_tmp'$timestamp
fname=`basename $e_matrix` ## get the filename without path
logfile="scIGANs_"$timestamp"_"$fname".log" # the log file

mkdir -p $tmp
echo ""
echo $version
echo $version >> $logfile
echo "" >> $logfile
echo ""
echo "Prechecking input files..."
echo $(date)"	Prechecking input files..." >> $logfile
Rscript ${Bashdir}/src/inpro.R ${e_matrix} $tmp $logfile $label 2>&1 | tee -a $logfile

if [ $? -ne 0 ]
then
	exit 1
fi
while read line; do
par+=($line)
done < $tmp/args

img_size=${par[0]}
ncls=${par[1]}
label=${par[2]}

echo ""
if [ "$impute" == "" ]
then
	echo "Training..."
	echo "" >> $logfile
	echo $(date)"	Training..." >> $logfile
	echo ""
	echo "Command for training:" >> $logfile
	echo "	"--file_d=$tmp/${fname} --file_c=$label --ncls=$ncls --img_size=$img_size --n_epochs=$epochs --sim_size=$sim_size --knn_k=$knn_k --batch_size=$batch_size --latent_dim=$latent_dim --threthold=$threthold --train >> $logfile
	python ${Bashdir}/src/imputeByGans.py --file_d=$tmp/${fname} --file_c=$label --ncls=$ncls --img_size=$img_size --n_epochs=$epochs --sim_size=$sim_size --knn_k=$knn_k --batch_size=$batch_size --latent_dim=$latent_dim --threthold=$threthold --train 2>&1 | tee -a $logfile
	echo "Imputing..."
	echo "" >> $logfile
	echo $(date)"	Imputing..." >> $logfile
	echo ""
	echo "Command for Imputing:" >> $logfile
	echo "	"--file_d=$tmp/${fname} --file_c=$label --ncls=$ncls --img_size=$img_size --n_epochs=$epochs --sim_size=$sim_size --knn_k=$knn_k --latent_dim=$latent_dim --impute >> $logfile
	python ${Bashdir}/src/imputeByGans.py --file_d=$tmp/${fname} --file_c=$label --ncls=$ncls --img_size=$img_size --n_epochs=$epochs --sim_size=$sim_size --knn_k=$knn_k --latent_dim=$latent_dim --impute 2>&1 | tee -a $logfile
else
	echo "Imputing..."
	echo "" >> $logfile
	echo $(date)"	Imputing..." >> $logfile
	echo ""
	echo "Command for Imputing:" >> $logfile
	echo "	"--file_d=$tmp/${fname} --file_c=$label --ncls=$ncls --img_size=$img_size --n_epochs=$epochs --sim_size=$sim_size --knn_k=$knn_k --latent_dim=$latent_dim --impute >> $logfile
	python ${Bashdir}/src/imputeByGans.py --file_d=$tmp/${fname} --file_c=$label --ncls=$ncls --img_size=$img_size --n_epochs=$epochs --sim_size=$sim_size --knn_k=$knn_k --latent_dim=$latent_dim --impute 2>&1 | tee -a $logfile
fi
if [ $? -eq 0 ]
then
	Rscript ${Bashdir}/src/outpro.R $fname $tmp $outdir $timestamp 2>&1 | tee -a $logfile
fi
rm -r $tmp
